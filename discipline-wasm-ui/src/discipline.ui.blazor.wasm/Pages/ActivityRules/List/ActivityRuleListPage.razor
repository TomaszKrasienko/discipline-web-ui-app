@page "/activity-rules-list"
@using discipline.ui.communication.http.ActivityRules.DTOs.Responses
@using discipline.ui.infrastructure.ActivityRules.Facades
@using discipline.ui.blazor.wasm.Components.Headers
@using discipline.ui.blazor.wasm.Components.Paragraphs
@using BlazorBootstrap
@inject IActivityRulesBrowseFacade ActivityRulesBrowseFacade
@inject NavigationManager NavigationManager

<DisciplinePageHeader Title="Activity Rules List"/>

@foreach (var activityRule in _activityRules)
{
    <div class="row">
        <div class="row selecting-row">
            <div class="col-md-5">
                <MainParagraph Content="@activityRule.Title"/>
            </div>
            <div class="col-md-5 text-end">
                <SubParagraph Content=@GetModeWithSelectedDays(activityRule)/>
            </div>
        </div>
        @if (activityRule.Stages.Any())
        {
            <div class="col-md-10 offset-lg-1">
            @foreach (var stage in activityRule.Stages)
            {
                <div class="row selecting-row">
                    <SubParagraph Content="@GetStageHeader(stage)"/>
                </div>
            }
            </div>
        }
    </div>
}


@code {
    private CancellationTokenSource _cts = new ();
    private List<ActivityRuleResponseDto> _activityRules = [];

    protected override async Task OnInitializedAsync()
    {
        _cts = new CancellationTokenSource();

        var result = await ActivityRulesBrowseFacade.HandleAsync(_cts.Token);

        if (result.IsT1)
        {
            NavigationManager.NavigateTo("/sign-in");   
        }
        
        _activityRules = result.AsT0.ToList();
    }

    private string GetModeWithSelectedDays(ActivityRuleResponseDto activityRule)
        => activityRule.SelectedDays is null 
            ? activityRule.Mode 
            : $"{activityRule.Mode} ({string.Join(',', activityRule.SelectedDays)})";

    private string GetStageHeader(ActivityRuleStageResponseDto stage)
        => $"{stage.Index}. {stage.Title}";

    private void OnEmployeeListUpdate(SortableListEventArgs args)
    {
    }
}