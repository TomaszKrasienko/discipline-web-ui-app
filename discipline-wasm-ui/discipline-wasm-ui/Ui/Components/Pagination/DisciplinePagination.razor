<div class="row">
    <div class="col-md-12">
        <button
            class="btn btn-sm discipline-pagination-btn"
            @onclick="() => ButtonClicked(_firstTag)">
            <i class="bi bi-chevron-double-left"></i>
        </button>
        <button
            class="btn btn-sm discipline-pagination-btn"
            @onclick="() => ButtonClicked(_previousTag)">
            <i class="bi bi-chevron-left"></i>
        </button>
        @foreach (var number in _pageNumbers)
        {
            <button
                class="btn btn-sm discipline-pagination-btn"
                @onclick="() => ButtonClicked(number.ToString())">
                @number
            </button>
        }
        <button
            class="btn btn-sm discipline-pagination-btn"
            @onclick="() => ButtonClicked(_nextTag)">
            <i class="bi bi-chevron-right"></i>
        </button>
        <button
            class="btn btn-sm discipline-pagination-btn"
            @onclick="() => ButtonClicked(_lastTag)">
            <i class="bi bi-chevron-double-right"></i>
        </button>
    </div>
</div>

@code {
    private List<int> _pageNumbers = new List<int>();
    private const string _nextTag = "first";
    private const string _previousTag = "last";    
    private const string _firstTag = "first";
    private const string _lastTag = "last";
    [Parameter, EditorRequired] 
    public int TotalPages { get; set; }
    
    [Parameter, EditorRequired] 
    public int ActiveNumberPage { get; set; }
    
    [Parameter, EditorRequired] 
    public EventCallback<int> OnPageChangedCallback { get; set; }

    protected override void OnInitialized()
    {
            Console.WriteLine($"T: {TotalPages}");
            for (int i = 1; i <= TotalPages; i++)
            {
                _pageNumbers.Add(i);
            }
    }

    private void ButtonClicked(string number)
    {
        Console.WriteLine(number);
    }
}