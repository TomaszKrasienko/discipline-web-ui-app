@namespace discipline.ui.Components.Pages.BrowseActivityRulesComponents.Components
@using discipline.core.DTOs
@using discipline.core.Dispatchers.Abstractions
@using discipline.core.Dispatchers.Models
@using discipline.core.Helpers.Statics
@using discipline.ui.Components.Pages.ActivityRuleFormComponents
@using discipline.ui.Components.Pages.Common.Buttons
@using BlazorBootstrap
@using discipline.ui.Components.Pages.DeleteActivityRuleComponents
@inject IDisciplineAppDispatcher DisciplineAppDispatcher;

<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet"/>
<div class="row">
    @foreach (var activityRule in _activityRules)
    {
        <span class="discipline-table-row" @onmouseover="() => OnMouseOverRow(activityRule.Id)" @onmouseout="OnMouseOutRow">
            <div class="row discipline-table-row-header">@activityRule.Title</div>
            <div class="row">
            <div class="col-md-10 discipline-table-row-mode">@activityRule.Mode @activityRule.AsCheckedWeekdaysString("-")</div>
            @if (activityRule.Id == _activeRowId)
            {
                <div class="col-md-2 text-end">
                    <DeleteIconButton OnClickCallback="async () => await DeleteActivityRule(activityRule.Id)"/>
                </div>
            }
            </div>
        </span>
    }
</div>


<div class="row discipline-pagination-position">
    <Pagination 
        TotalPages="_totalPages" 
        ActivePageNumber="_pageNumber" 
        Size="PaginationSize.Small"
        Alignment="Alignment.Center"
        FirstLinkIcon="IconName.ChevronDoubleLeft"
        PreviousLinkIcon="IconName.ChevronLeft"
        NextLinkIcon="IconName.ChevronRight"
        LastLinkIcon="IconName.ChevronDoubleRight"
        Class="discipline-pagination-colors"
        PageChanged="OnPageChangedAsync"/>
</div>

<ActivityRuleFormModal @ref="_activityRuleFromModal"/>
<DeleteActivityRuleModal @ref="_deleteActivityRuleModal"></DeleteActivityRuleModal>
@code {
    private List<ActivityRuleDto> _activityRules = [];
    private Guid? _activeRowId = null;
    private int _pageNumber = 1;
    private int _totalPages = 1;
    private int _pageSize = 10;
    private ActivityRuleFormModal? _activityRuleFromModal = default;
    private DeleteActivityRuleModal? _deleteActivityRuleModal = default;
    
    protected override async Task OnInitializedAsync()
        => await InitializeData();

    private async Task OnPageChangedAsync(int newPageNumber)
    {
        _pageNumber = newPageNumber;
        await InitializeData();
    }

    private async Task InitializeData()
    {
        var data = await DisciplineAppDispatcher.BrowseActivityRules(new PaginationRequest()
        {
            PageNumber = _pageNumber,
            PageSize = _pageSize
        });
        _activityRules = data.Data;
        _pageNumber = data.MetaData.CurrentPage;
        _totalPages = data.MetaData.TotalPages;
    }

    private async Task OnClickToShowEdit(ActivityRuleDto activityRuleDto)
    {
        if (_activityRuleFromModal is not null)
        {
            _activityRuleFromModal.ActivityRuleId = activityRuleDto.Id;
            await _activityRuleFromModal.OnShowClick();
        }
    }
    
    private void OnMouseOverRow(Guid activityRuleId)
    {
        _activeRowId = activityRuleId;
    }

    private void OnMouseOutRow()
    {
        _activeRowId = null;
    }
    
    private async Task DeleteActivityRule(Guid id)
    {
        _deleteActivityRuleModal!.ActivityRuleId = id;
        await _deleteActivityRuleModal.ShowAsync();
    }
}