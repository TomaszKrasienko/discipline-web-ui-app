@page "/daily-productivity"
@using discipline.ui.Components.Pages.CommonComponents.Headers
@using BlazorBootstrap
@using discipline.core.Dispatchers.Abstractions
@using discipline.core.DTOs
@using discipline.ui.Components.Pages.DailyProductive.BrowseDailyProductivity.TableComponent
@using discipline.ui.Components.Pages.CommonComponents.Buttons
@using discipline.ui.Components.Pages.DailyProductive.ActivityFormComponents
@inject IDailyProductivityDisciplineAppDispatcher DailyProductivityDisciplineAppDispatcher
@rendermode InteractiveServer

<PageTitle>Daily productivity</PageTitle>
<PageHeader Title="Daily productivity"/>
<div class="row text-center">
    <div class="col-md-4 offset-4">
        <DateInput TValue="DateOnly" @bind-Value="@_day" Id="daily-productivity-day"/>
    </div>
</div>
<div class="row pt-5">
    <div class="col-md-6 offset-2 mx-auto">
        @if (_dailyProductivity is not null)
        {
            @foreach (var activity in _dailyProductivity?.Activities!)
            {
                <div class="row">
                    <ActivityTableRow 
                        Activity="activity" 
                        OnActivityRowClick="() => ChangeCheck(activity)"/>
                </div>
            }
        }
    </div>
</div>

<CreateNewButton 
    OnClickCallback="OnCreateNewButtonClickAsync"/>
<ActivityFormModal
    @ref="_activityFormModal"
    Day="_day"/>

@code {
    private DateOnly _day = DateOnly.FromDateTime(DateTime.Now.Date);
    private DailyProductivityDto? _dailyProductivity;
    private ActivityFormModal _activityFormModal = default!;

    protected override async Task OnParametersSetAsync()
    {
        _dailyProductivity = await DailyProductivityDisciplineAppDispatcher.GetDailyProductivityByDay(_day);
    }

    private void ChangeCheck(ActivityDto activity)
        => activity.IsChecked = !activity.IsChecked;

    private async Task OnCreateNewButtonClickAsync()
        => await _activityFormModal.ShowModalAsync();

}