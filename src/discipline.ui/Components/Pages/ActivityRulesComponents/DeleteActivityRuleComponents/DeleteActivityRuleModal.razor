@using discipline.ui.Components.Common.ButtonsComponents
@using discipline.ui.Components.Common.DialogsComponents
@using BlazorBootstrap
@using discipline.core.Dispatchers.Abstractions
@using discipline.ui.Helpers
@inject IActivityRulesDisciplineAppDispatcher ActivityRulesDisciplineAppDispatcher;

<ConfirmDialogModal
    @ref="_deleteConfirmationModal"
    Title="Confirm"
    Content="Are you sure you want to delete item?"
    OnConfirmDialogCallback="DeleteActivityRuleAsync"/>

<Toasts 
    Class="p-3" 
    Messages="_messages" 
    AutoHide="true" 
    Delay="4000" 
    Placement="ToastsPlacement.TopRight"/>

@code {
    [Parameter] public Guid? ActivityRuleId { get; set; }
    [Parameter] public EventCallback OnHidingEventCallback { get; set; }
    private ConfirmDialogModal _deleteConfirmationModal = default!;
    private List<ToastMessage> _messages = [];

    private async Task DeleteActivityRuleAsync()
    {
        var response = await ActivityRulesDisciplineAppDispatcher.DeleteActivityRuleAsync(ActivityRuleId!.Value);
        _messages?.Add(response.AsToastMessage("Deleted activity rule"));
        await OnHidingEventCallback.InvokeAsync();
    }

    internal async Task ShowAsync()
        => await _deleteConfirmationModal.ShowModalAsync();
}