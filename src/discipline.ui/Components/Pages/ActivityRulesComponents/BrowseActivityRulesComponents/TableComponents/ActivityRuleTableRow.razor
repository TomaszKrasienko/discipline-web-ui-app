@using discipline.core.DTOs
@using discipline.core.Helpers.Statics
@using discipline.ui.Components.Common.ButtonsComponents
@namespace discipline.ui.Components.Pages.ActivityRulesComponents.BrowseActivityRulesComponents.TableComponents

<span class="activity-rule-table-row"
      @onmouseover="OnMouseOver"
      @onmouseout="OnMouseOut">
    <div class="row">
        <div class="col-md-10" @onclick="ShowEditActivityRuleAsync">
            <div class="row activity-rule-table-row-header">
                <span><i class="bi bi-dot"></i>@ActivityRule?.Title</span>
            </div>
            <div class="row activity-rule-table-row-details">
                <span>@ActivityRule?.Mode @ActivityRule.AsCheckedWeekdaysString("-")</span>
            </div>
        </div>
        <div class="col-md-2 text-end">
            @if (_isHover)
            {
                <DeleteIconButton 
                    OnClickCallback="DeleteActivityRuleAsync"/>
            }
        </div>
    </div>
</span>

@code {
    [Parameter] public ActivityRuleDto? ActivityRule { get; set; }
    [Parameter] public EventCallback<ActivityRuleDto> OnActivityRuleEditCallback { get; set; }
    [Parameter] public EventCallback<Guid> OnActivityRuleDeleteCallback { get; set; }
    
    private bool _isHover = false;

    private void OnMouseOver()
        => _isHover = true;

    private void OnMouseOut()
        => _isHover = false;

    private async Task ShowEditActivityRuleAsync()
        => await OnActivityRuleEditCallback.InvokeAsync(ActivityRule);

    private async Task DeleteActivityRuleAsync()
        => await OnActivityRuleDeleteCallback.InvokeAsync(ActivityRule!.Id);

}