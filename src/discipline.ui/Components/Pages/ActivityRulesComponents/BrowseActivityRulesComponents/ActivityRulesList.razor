@page "/activity-rules-list"
@using discipline.ui.Components.Common.ButtonsComponents
@using discipline.ui.Components.Common.HeadersComponents
@using discipline.ui.Components.Pages.ActivityRulesComponents.ActivityRuleFormComponents
@using discipline.ui.Components.Pages.ActivityRulesComponents.BrowseActivityRulesComponents.TableComponents
@using BlazorBootstrap
@using discipline.ui.Communication.Dispatchers.Abstractions
@using discipline.ui.Communication.Dispatchers.Models
@using discipline.ui.Communication.DTOs
@using discipline.ui.Components.Pages.ActivityRulesComponents.DeleteActivityRuleComponents
@inject IActivityRulesDispatcher DisciplineAppDispatcher;
@rendermode InteractiveServer

<PageTitle>Activity rules list</PageTitle>

<div class="row">
    <div class="col-md-8 offset-2">
        <PageHeader Title="Activity Rules"/>
        <div class="row">
            @foreach (var activityRule in _activityRules)
            {
                <ActivityRuleTableRow
                    ActivityRule="activityRule"
                    OnActivityRuleEditCallback="ShowEditActivityRuleAsync"
                    OnActivityRuleDeleteCallback="DeleteActivityRuleAsync"/>
            }
        </div>
    </div>
</div>


<div class="row discipline-pagination-position">
    <Pagination 
        TotalPages="_totalPages" 
        ActivePageNumber="_pageNumber" 
        Size="PaginationSize.Small"
        Alignment="Alignment.Center"
        FirstLinkIcon="IconName.ChevronDoubleLeft"
        PreviousLinkIcon="IconName.ChevronLeft"
        NextLinkIcon="IconName.ChevronRight"
        LastLinkIcon="IconName.ChevronDoubleRight"
        Class="discipline-pagination-colors"
        PageChanged="ChangePageAsync"/>
</div>

<CreateNewButton 
    OnClickCallback="ShowCreateActivityRuleAsync"/>

<ActivityRuleFormModal 
    @ref="_activityRuleFormModal"
    OnActivityAdded="RefreshAfterAdd"/>

<DeleteActivityRuleModal
    @ref="_deleteActivityRuleModal"
    OnHidingEventCallback="RefreshAfterDeleteAsync"/>

@code {
    private ActivityRuleFormModal? _activityRuleFormModal = default;
    private DeleteActivityRuleModal? _deleteActivityRuleModal = default;
    private List<ActivityRuleDto> _activityRules = [];
    private int _pageNumber = 1;
    private int _totalPages = 1;
    private int _pageSize = 10;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeData();
        }
    }

    private async Task RefreshAfterDeleteAsync()
        => await InitializeData();

    private async Task RefreshAfterAdd()
    {
        _activityRuleFormModal!.ActivityRuleId = null;
        await InitializeData();
    }

    private async Task InitializeData()
    {
        var data = await DisciplineAppDispatcher.BrowseActivityRules(new PaginationRequest()
        {
            PageNumber = _pageNumber,
            PageSize = _pageSize
        });
        _activityRules = data.Data;
        _pageNumber = data.MetaData.CurrentPage;
        _totalPages = data.MetaData.TotalPages;
    }
    
    private async Task ShowEditActivityRuleAsync(ActivityRuleDto activityRuleDto)
    {
        _activityRuleFormModal!.ActivityRuleId = activityRuleDto.Id;
        await _activityRuleFormModal.OnShowClick();
    }
    
    private async Task ShowCreateActivityRuleAsync()
        => await _activityRuleFormModal!.OnShowClick();
    
    private async Task DeleteActivityRuleAsync(Guid id)
    {
        _deleteActivityRuleModal!.ActivityRuleId = id;
        await _deleteActivityRuleModal.ShowAsync();
    }
    
    private async Task ChangePageAsync(int newPageNumber)
    {
        _pageNumber = newPageNumber;
        await InitializeData();
    }
}