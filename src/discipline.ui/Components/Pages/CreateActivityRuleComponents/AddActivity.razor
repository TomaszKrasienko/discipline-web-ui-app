@page "/create-activity-rule"
@using discipline.core.Dispatchers.Models.ActivityRule
@using discipline.ui.Helpers
@using discipline.ui.Models
@using discipline.core.Dispatchers.Abstractions
@using discipline.core.DTOs
@using BlazorBootstrap
@inject ILogger<AddActivity> Logger;
@inject IDisciplineAppDispatcher DisciplineAppDispatcher;
@inject NavigationManager NavigationManager;
@rendermode InteractiveServer

<PageTitle>Add new activity</PageTitle>

<div class="row">
    <div class="col-md-10 text-center offset-1">
        <h2>Add new activity</h2>  
    </div>
</div>
@* @if (!_isValid) *@
@* { *@
    <div>
        <Alert Color="AlertColor.Danger">Test</Alert>
    </div>
@* } *@
<div class="row">
    <div class="col-md-6 offset-3">
        <EditForm method="post" OnSubmit="Submit" Model="CreateActivityRuleRequest">
            <div class="discipline-form-group">
                <label for="new-activity-title">Title: </label>
                <InputText
                    class="form-control"
                    id="new-activity-title"
                    placeholder="Title"
                    @bind-Value="CreateActivityRuleRequest!.Title"/>
            </div>
            <div class="discipline-input-group">
                <label class="form-label" for="new-activity-mode">Mode: </label>
                <InputSelect 
                    class="form-control"
                    id="new-activity-mode" 
                    @bind-Value="CreateActivityRuleRequest!.Mode">
                    @foreach (var mode in _activityRuleModes)
                    {
                        <option value="@mode.Key">
                            @mode.Name
                        </option>
                    }
                </InputSelect>
            </div>
            
            @if (CreateActivityRuleRequest.Mode == "Custom")
            {
                <div class="discipline-input-group">
                    <label>Days:</label>
                    @foreach (var weekdayCheck in _weekdays)
                    {
                        <div class="form-check">
                            <InputCheckbox
                                @bind-Value="weekdayCheck!.IsChecked"
                                @oninput="() => ChangeWeekdayCheck(weekdayCheck)">
                            </InputCheckbox>
                            <label
                                class="form-check-label"
                                @onclick="() => ChangeWeekdayCheck(weekdayCheck)">@weekdayCheck.Name</label>
                        </div>
                    }
                </div>
            }
            <div class="form-group discipline-input-group">
                <button class="btn btn-dark" type="submit">Submit</button>
            </div>


        </EditForm>
    </div>
</div>
@code {
    [SupplyParameterFromForm] 
    public CreateActivityRuleRequest CreateActivityRuleRequest { get; set; } = new();

    private readonly List<Weekday> _weekdays = WeekdayFactory.Get();
    private List<ActivityRuleModeDto> _activityRuleModes = new();
    private bool _isValid = true;
    private string _errorMessage = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        _activityRuleModes = await DisciplineAppDispatcher.GetActivityRuleModesAsync();
        CreateActivityRuleRequest.Mode = _activityRuleModes.FirstOrDefault()?.Key;
    }

    private void ChangeWeekdayCheck(Weekday weekday)
    {
        weekday.IsChecked = !weekday.IsChecked;
        Logger.LogInformation("Check changed");
    }

    private async Task Submit()
    {
        var response = await DisciplineAppDispatcher.CreateActivityRuleAsync(CreateActivityRuleRequest);
        if (!response.IsValid)
        {
            _isValid = false;
            _errorMessage = response.Message;
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}