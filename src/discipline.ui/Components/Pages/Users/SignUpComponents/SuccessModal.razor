@using BlazorBootstrap

@* <Modal *@
@*     @ref="_dialogModal" *@
@*     Title="Confirm" *@
@*     DialogCssClass="custom-modal-content" *@
@*      > *@
@*     <BodyTemplate> *@
@*         <div class="success-card"> *@
@*             <div class="row"> *@
@*                 <h3>Thank you for register</h3> *@
@*                 <p>Please sign in and pick your subscription</p> *@
@*             </div> *@
@*         </div> *@
@*     </BodyTemplate> *@
@* </Modal> *@
<button 
    type="button" 
    class="btn btn-primary" 
    data-bs-toggle="modal" 
    data-bs-target="#exampleModal">
    Launch demo modal
</button>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter] public EventCallback Show { get; set; }
    [Parameter] public RenderFragment Body { get; set; }
    //private Modal _dialogModal = default!;

    // internal async Task ShowModalAsync()
    //     => await _dialogModal.ShowAsync();

}