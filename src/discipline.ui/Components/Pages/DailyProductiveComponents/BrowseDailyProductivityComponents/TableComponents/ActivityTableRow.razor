@namespace discipline.ui.Components.Pages.DailyProductive.BrowseDailyProductivity.TableComponent
@using discipline.core.DTOs
@using discipline.ui.Components.Common.ButtonsComponents
@using discipline.ui.Components.Pages.DailyProductiveComponents.DeleteActivityComponents
@using discipline.core.Dispatchers.Abstractions

<span
    class="activity-table-row"
    @onmouseover="OnMouseOver"
    @onmouseout="OnMouseOut">
    <div class="row">
        <div class="col-md-10" @onclick="async () => await OnRowClick()">
            <ActivityCheckIcon IsChecked="Activity?.IsChecked"/>
            @Activity?.Title
        </div>
        <div class="col-md-2 text-end">
            @if (_isHover)
            {
                <DeleteIconButton
                    OnClickCallback="DeleteActivityAsync"/>
            }
        </div>
    </div>
</span>

<DeleteActivityModal
    @ref="_deleteActivityModal"
    ActivityId="Activity?.Id"
    OnDeleteCallback="OnDeleteActivityCallback"/>

@code {
    [Parameter] public ActivityDto? Activity { get; set; }
    [Parameter] public EventCallback OnActivityRowClick { get; set; }
    [Parameter] public EventCallback OnDeleteActivityCallback { get; set; }
    private DeleteActivityModal? _deleteActivityModal;
    private bool _isHover = false;
    
    private async Task OnRowClick()
        => await OnActivityRowClick.InvokeAsync();

    private void OnMouseOver()
        => _isHover = true;

    private void OnMouseOut()
        => _isHover = false;

    private async Task DeleteActivityAsync()
    {
        await _deleteActivityModal!.ShowAsync();
        await OnDeleteActivityCallback.InvokeAsync();
    }

}