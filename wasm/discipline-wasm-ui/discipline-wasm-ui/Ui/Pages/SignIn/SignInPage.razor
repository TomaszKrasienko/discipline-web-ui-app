@page "/sign-in"
@using discipline_wasm_ui.Services.DTOs
@using discipline_wasm_ui.Services.Models.Users
@using discipline_wasm_ui.Storage.Abstractions
@using discipline_wasm_ui.Ui.Components.Buttons
@inject IUserDispatcher UserDispatcher;
@inject ILocalStorageAccessor LocalStorageAccessor;


<div class="row pt-2">
    <div class="col-md-6 offset-3">
        <EditForm
            method="post"
            OnSubmit="Submit"
            Model="SignInRequest">
            <label for="sign-in-email">Email:</label>
            <InputText
                class="form-control"
                id="sign-in-email"
                placeholder="Email"
                @bind-Value="SignInRequest.Email"/>
            <label for="sign-in-password">Password:</label>
            <InputText
                class="form-control"
                id="sign-in-password"
                type="password"
                placeholder="Password"
                @bind-Value="SignInRequest.Password"/>
            <DisciplineSubmitButtons 
                Type="DisciplineSubmitButtons.SubmitButtonType.Page"/>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm] 
    public SignInRequest SignInRequest { get; set; } = new ();
    
    private async Task Submit()
    {
        var result = await UserDispatcher.SignIn(SignInRequest);
        if (result.IsValid)
        {
            var tokens = (TokensDto)result.Result;
            await LocalStorageAccessor.SetItemAsync(tokens);
        }
    }
}